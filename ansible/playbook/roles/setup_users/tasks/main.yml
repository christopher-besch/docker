# This role does essentially the same as the prepare_as_root role but without the root user.
# Everything that doesn't need the root user is done here.
# This role is idempotent.
---

# This makes prepare_server.yml play impossible.
- name: Disable root SSH login
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^PermitRootLogin"
    line: "PermitRootLogin no"
  notify: restart_sshd

- name: Disable root
  become: true
  ansible.builtin.user:
    name: root
    shell: /sbin/nologin
    password_lock: true

- name: Delete pi user
  become: true
  ansible.builtin.user:
    name: pi
    state: absent
    remove: true
  when: "'raspberry' in group_names"

# apprun setup #
- name: Create apprun group
  become: true
  ansible.builtin.group:
    name: apprun
    # This gid was used on the first server install and some permissions still use it.
    # So never change a running system.
    gid: 996
  when: "'hetzner' in group_names"

- name: Create apprun group
  become: true
  ansible.builtin.group:
    name: apprun
    # On Raspberry Pi OS the gid 996 is already taken.
    gid: 1001
  when: "'raspberry' in group_names"

- name: Create docker group
  become: true
  ansible.builtin.group:
    name: docker
    gid: 1000

- name: Create apprun
  become: true
  ansible.builtin.user:
    name: apprun
    uid: 1000
    group: apprun
    groups: docker
    password_lock: true
    shell: /bin/bash

- name: Add SSH authorized key for apprun
  become: true
  ansible.posix.authorized_key:
    user: apprun
    key: "{{ lookup('file', '{{ ssh_pub_key_path }}') }}"
